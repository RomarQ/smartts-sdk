"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[338],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5193:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={},c="Declaring variables",l={unversionedId:"statements/variables",id:"statements/variables",title:"Declaring variables",description:"NewVariable",source:"@site/docs/statements/variables.md",sourceDirName:"statements",slug:"/statements/variables",permalink:"/smartts-sdk/statements/variables",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/statements/variables.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Return values (Views/Lambdas)",permalink:"/smartts-sdk/statements/return"},next:{title:"FA2",permalink:"/smartts-sdk/contracts/fa2"}},u=[{value:"NewVariable",id:"newvariable",children:[],level:2}],p={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"declaring-variables"},"Declaring variables"),(0,o.kt)("h2",{id:"newvariable"},"NewVariable"),(0,o.kt)("p",null,"The statement ",(0,o.kt)("inlineCode",{parentName:"p"},"NewVariable")," is used to declare local scoped variables."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/statement.html#NewVariable"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const {\n    Contract,\n    EntryPoint,\n    ContractStorage,\n    ForEachOf,\n    NewVariable,\n    SetValue,\n    Add,\n    PrependToList,\n    GetVariable,\n    TUnit,\n    List,\n    Nat\n} = require(\'@tezwell/smartts-sdk\');\n\nconst contract = new Contract()\n    // let <contract>.<storage> = [1, 2, 3];\n    .setStorage(List([Nat(1), Nat(2), Nat(3)]))\n    .addEntrypoint(\n        new EntryPoint(\'entry_point_1\')\n            .setInputType(TUnit())\n            .code(() => [\n                // let sum = 0;\n                NewVariable("sum", Nat(0)),\n                // <contract>.<storage>.forEach((el) => {\n                //   sum += el;\n                // })\n                ForEachOf(ContractStorage()).Do((el) => [\n                    SetValue(GetVariable("sum"), Add(GetVariable("sum"), el))\n                ]),\n                // <contract>.<storage> = [...<contract>.<storage>, sum];\n                SetValue(ContractStorage(), PrependToList(ContractStorage(), GetVariable("sum")))\n            ])\n    );\n')))}m.isMDXComponent=!0}}]);