"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[656],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},y=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,p=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),y=s(n),f=o,d=y["".concat(p,".").concat(f)]||y[f]||l[f]||a;return n?r.createElement(d,i(i({ref:e},u),{},{components:n})):r.createElement(d,i({ref:e},u))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=y;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2085:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return y}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={},p="Entry Points",s={unversionedId:"contract_api/entrypoint",id:"contract_api/entrypoint",title:"Entry Points",description:"Define an entrypoint",source:"@site/docs/contract_api/entrypoint.md",sourceDirName:"contract_api",slug:"/contract_api/entrypoint",permalink:"/smartts-sdk/contract_api/entrypoint",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/contract_api/entrypoint.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Overview",permalink:"/smartts-sdk/"},next:{title:"Initial Storage",permalink:"/smartts-sdk/contract_api/initial_storage"}},u=[{value:"Define an entrypoint",id:"define-an-entrypoint",children:[],level:2}],l={toc:u};function y(t){var e=t.components,n=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"entry-points"},"Entry Points"),(0,a.kt)("h2",{id:"define-an-entrypoint"},"Define an entrypoint"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/classes/core.EntryPoint.html"},"TypeDoc"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { Contract, EntryPoint, SetValue, ContractStorage, TNat, GetLevel } = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TNat()) // Specify the storage type\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TNat()) // Specify the type of the entrypoint argument\n            .code((arg) => [\n                SetValue(ContractStorage(), arg) // Update contract storage\n            ]);\n    )\n    .addEntrypoint(\n        new EntryPoint('entry_point_2').code(() => [\n            SetValue(ContractStorage(), GetLevel())\n        ]);\n    );\n")))}y.isMDXComponent=!0}}]);