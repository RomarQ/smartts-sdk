"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[599],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9810:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={},l="On-Chain View",c={unversionedId:"expressions/view",id:"expressions/view",title:"On-Chain View",description:"Call an on-chain view",source:"@site/docs/expressions/view.md",sourceDirName:"expressions",slug:"/expressions/view",permalink:"/smartts-sdk/expressions/view",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/expressions/view.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Accessing Variables",permalink:"/smartts-sdk/expressions/variables"},next:{title:"Assertion",permalink:"/smartts-sdk/statements/assertion"}},p=[{value:"Call an on-chain view",id:"call-an-on-chain-view",children:[{value:"Usage",id:"usage",children:[],level:4}],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"on-chain-view"},"On-Chain View"),(0,o.kt)("h2",{id:"call-an-on-chain-view"},"Call an on-chain view"),(0,o.kt)("p",null,"The expression ",(0,o.kt)("inlineCode",{parentName:"p"},"CallView")," calls an on-chain view and returns a result of type ",(0,o.kt)("inlineCode",{parentName:"p"},"TOption(<any>)"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#CallView"},"TypeDoc"))),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    OnChainView,\n    TOption,\n    TBool,\n    Not,\n    ContractStorage,\n    CallView,\n    GetSelfAddress,\n    SetValue,\n    Return,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TOption(TBool()))\n    .addView(\n        new OnChainView('negate')\n            .setInputType(TBool())\n            .code((argument) => [Return(Not(argument))])\n    )\n    .addEntrypoint(\n        new EntryPoint('ep1')\n            .setInputType(TBool())\n            .code((arg) => [\n                SetValue(ContractStorage(), CallView('negate', GetSelfAddress(), arg, TBool())),\n            ]),\n    );\n")))}d.isMDXComponent=!0}}]);