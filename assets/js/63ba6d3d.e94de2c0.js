"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[853],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),l=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=l(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),m=l(n),d=a,y=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(y,i(i({ref:e},c),{},{components:n})):r.createElement(y,i({ref:e},c))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8007:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={},p="Sapling",l={unversionedId:"expressions/sapling",id:"expressions/sapling",title:"Sapling",description:"Create a sapling empty state",source:"@site/docs/expressions/sapling.md",sourceDirName:"expressions",slug:"/expressions/sapling",permalink:"/smartts-sdk/expressions/sapling",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/expressions/sapling.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Lambda",permalink:"/smartts-sdk/expressions/lambda"},next:{title:"Serialization",permalink:"/smartts-sdk/expressions/serialization"}},c=[{value:"Create a sapling empty state",id:"create-a-sapling-empty-state",children:[],level:2},{value:"Verify and apply a transaction on a Sapling state.",id:"verify-and-apply-a-transaction-on-a-sapling-state",children:[],level:2}],u={toc:c};function m(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sapling"},"Sapling"),(0,o.kt)("h2",{id:"create-a-sapling-empty-state"},"Create a sapling empty state"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#EmptySaplingState"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    EmptySaplingState,\n    Unit,\n    Mutez,\n    Address,\n    TUnit,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TSapling_state(8))\n    .addEntrypoint(\n        new EntryPoint('entry_point_1').code(() => [\n            SetValue(ContractStorage(), EmptySaplingState(8)),\n        ]),\n    );\n")),(0,o.kt)("h2",{id:"verify-and-apply-a-transaction-on-a-sapling-state"},"Verify and apply a transaction on a Sapling state."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#ApplySaplingUpdate"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    EmptySaplingState,\n    Unit,\n    Mutez,\n    Address,\n    TUnit,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TSapling_state(8))\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TSapling_transaction(8))\n            .code((argument) => [\n                SetValue(\n                    ContractStorage(),\n                    SecondElement(GetSome(ApplySaplingUpdate(ContractStorage(), argument))),\n                ),\n            ]),\n    );\n")))}m.isMDXComponent=!0}}]);