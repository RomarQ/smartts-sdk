"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[68],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7566:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={},l="Serialization",c={unversionedId:"expressions/serialization",id:"expressions/serialization",title:"Serialization",description:"Serialize data",source:"@site/docs/expressions/serialization.md",sourceDirName:"expressions",slug:"/expressions/serialization",permalink:"/smartts-sdk/expressions/serialization",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/expressions/serialization.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Sapling",permalink:"/smartts-sdk/expressions/sapling"},next:{title:"Accessing Variables",permalink:"/smartts-sdk/expressions/variables"}},p=[{value:"Serialize data",id:"serialize-data",children:[],level:2},{value:"Deserialize data",id:"deserialize-data",children:[],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"serialization"},"Serialization"),(0,i.kt)("h2",{id:"serialize-data"},"Serialize data"),(0,i.kt)("p",null,"The expression ",(0,i.kt)("inlineCode",{parentName:"p"},"Pack")," serializes any value of packable type to its optimized binary representation, of type ",(0,i.kt)("inlineCode",{parentName:"p"},"TBytes()"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#Pack"},"TypeDoc"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Some,\n    Pack,\n    TString,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TString())\n            .code((argument) => [\n                SetValue(ContractStorage(), Some(Pack(argument)))\n            ]),\n    );\n")),(0,i.kt)("h2",{id:"deserialize-data"},"Deserialize data"),(0,i.kt)("p",null,"The expression ",(0,i.kt)("inlineCode",{parentName:"p"},"Unpack")," deserialize a value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"TBytes()")," into the corresponding Michelson value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"TOption(...)"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#Unpack"},"TypeDoc"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Pack,\n    TBytes,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TBytes())\n            .code((argument) => [\n                SetValue(ContractStorage(), Unpack(argument))\n            ]),\n    );\n")))}d.isMDXComponent=!0}}]);