"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[523],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2354:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={},l="Crypto",c={unversionedId:"expressions/crypto",id:"expressions/crypto",title:"Crypto",description:"Signatures",source:"@site/docs/expressions/crypto.md",sourceDirName:"expressions",slug:"/expressions/crypto",permalink:"/smartts-sdk/expressions/crypto",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/expressions/crypto.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Contract",permalink:"/smartts-sdk/expressions/contract"},next:{title:"Equality",permalink:"/smartts-sdk/expressions/equality"}},p=[{value:"Signatures",id:"signatures",children:[{value:"Check Signature",id:"check-signature",children:[],level:3}],level:2},{value:"Hashing",id:"hashing",children:[{value:"SHA256",id:"sha256",children:[],level:3},{value:"SHA512",id:"sha512",children:[],level:3},{value:"SHA3",id:"sha3",children:[],level:3},{value:"BLAKE2B",id:"blake2b",children:[],level:3},{value:"KECCAK",id:"keccak",children:[],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"crypto"},"Crypto"),(0,o.kt)("h2",{id:"signatures"},"Signatures"),(0,o.kt)("h3",{id:"check-signature"},"Check Signature"),(0,o.kt)("p",null,"Verifies that a given sequence of bytes has been signed with a given key."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#CheckSignature-1"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    CheckSignature,\n    Some,\n    Key,\n    Bytes,\n    TBool,\n    TSignature\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TBool())\n    .addEntrypoint(\n        new EntryPoint('check_signature')\n            .setInputType(TSignature())\n            .code((signature) => [\n                SetValue(\n                    ContractStorage(),\n                    CheckSignature(\n                        Key('edpku3g7CeTEvSKhxipD4Q2B6EiEP8cR323u8PFmGFgKRVRvCneEmT'),\n                        signature,\n                        Bytes('0x01'),\n                    ),\n                ),\n            ]),\n    );\n")),(0,o.kt)("h2",{id:"hashing"},"Hashing"),(0,o.kt)("h3",{id:"sha256"},"SHA256"),(0,o.kt)("p",null,"Compute a SHA-256 cryptographic hash."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#SHA256-1"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Some,\n    SHA256,\n    TBytes,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TBytes())\n            .code((arg) => [\n                SetValue(ContractStorage(), Some(SHA256(arg)))\n            ])\n    );\n")),(0,o.kt)("h3",{id:"sha512"},"SHA512"),(0,o.kt)("p",null,"Compute a SHA-512 cryptographic hash."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#SHA512-1"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Some,\n    SHA512,\n    TBytes,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TBytes())\n            .code((arg) => [\n                SetValue(ContractStorage(), Some(SHA512(arg)))\n            ])\n    );\n")),(0,o.kt)("h3",{id:"sha3"},"SHA3"),(0,o.kt)("p",null,"Compute a SHA3-256 cryptographic hash."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#SHA3-1"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Some,\n    SHA3,\n    TBytes,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TBytes())\n            .code((arg) => [\n                SetValue(ContractStorage(), Some(SHA3(arg)))\n            ])\n    );\n")),(0,o.kt)("h3",{id:"blake2b"},"BLAKE2B"),(0,o.kt)("p",null,"Compute a Blake2B cryptographic hash."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#BLAKE2B-1"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Some,\n    BLAKE2B,\n    TBytes,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TBytes())\n            .code((arg) => [\n                SetValue(ContractStorage(), Some(BLAKE2B(arg)))\n            ])\n    );\n")),(0,o.kt)("h3",{id:"keccak"},"KECCAK"),(0,o.kt)("p",null,"Compute a Keccak-256 cryptographic hash."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#KECCAK-1"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    ContractStorage,\n    None,\n    Some,\n    BLAKE2B,\n    TBytes,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(None())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TBytes())\n            .code((arg) => [\n                SetValue(ContractStorage(), Some(KECCAK(arg)))\n            ])\n    );\n")))}m.isMDXComponent=!0}}]);