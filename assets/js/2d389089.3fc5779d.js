"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[732],{3905:function(t,n,e){e.d(n,{Zo:function(){return p},kt:function(){return m}});var r=e(7294);function a(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function o(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function i(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?o(Object(e),!0).forEach((function(n){a(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function s(t,n){if(null==t)return{};var e,r,a=function(t,n){if(null==t)return{};var e,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var c=r.createContext({}),l=function(t){var n=r.useContext(c),e=n;return t&&(e="function"==typeof t?t(n):i(i({},n),t)),e},p=function(t){var n=l(t.components);return r.createElement(c.Provider,{value:n},t.children)},u={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(t,n){var e=t.components,a=t.mdxType,o=t.originalType,c=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=l(e),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return e?r.createElement(f,i(i({ref:n},p),{},{components:e})):r.createElement(f,i({ref:n},p))}));function m(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var o=e.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var l=2;l<o;l++)i[l]=e[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,e)}d.displayName="MDXCreateElement"},1213:function(t,n,e){e.r(n),e.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=e(7462),a=e(3366),o=(e(7294),e(3905)),i=["components"],s={},c="Conditional Controls",l={unversionedId:"statements/conditionals",id:"statements/conditionals",title:"Conditional Controls",description:"If",source:"@site/docs/statements/conditionals.md",sourceDirName:"statements",slug:"/statements/conditionals",permalink:"/smartts-sdk/statements/conditionals",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/statements/conditionals.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Assertion",permalink:"/smartts-sdk/statements/assertion"},next:{title:"Loop Controls",permalink:"/smartts-sdk/statements/loops"}},p=[{value:"If",id:"if",children:[],level:2},{value:"MatchVariant",id:"matchvariant",children:[],level:2}],u={toc:p};function d(t){var n=t.components,e=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,e,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"conditional-controls"},"Conditional Controls"),(0,o.kt)("h2",{id:"if"},"If"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"If")," statement creates two distinct branches (",(0,o.kt)("inlineCode",{parentName:"p"},"Then")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Else"),") that get executed conditionally depending on a given condition. The ",(0,o.kt)("inlineCode",{parentName:"p"},"Then")," branch gets executed if the ",(0,o.kt)("inlineCode",{parentName:"p"},"<condition>")," evaluates to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"; otherwise, the ",(0,o.kt)("inlineCode",{parentName:"p"},"Else")," branch is executed."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/statement.html#If"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    Equal,\n    GetSender,\n    ContractStorage,\n    If,\n    SetValue,\n    TUnit,\n    Bool,\n    Address\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(Bool(false))\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TUnit())\n            .code(() => [\n                // if(<transaction>.<sender> === \"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\") {\n                //     <contract>.<storage> = true;\n                // } else {\n                //     <contract>.<storage> = false;\n                // }\n                If(Equal(GetSender(), Address(\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\")))\n                    .Then([\n                        SetValue(ContractStorage(), Bool(true))\n                    ])\n                    .Else([\n                        SetValue(ContractStorage(), Bool(false))\n                    ])\n            ])\n    );\n")),(0,o.kt)("h2",{id:"matchvariant"},"MatchVariant"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MatchVariant")," statement specifies individual code branches for each possible value in a variant type."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/statement.html#MatchVariant"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    ContractStorage,\n    MatchVariant,\n    SetValue,\n    TVariant,\n    TString,\n    String\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorage(String(''))\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(\n                TVariant({\n                    action1: TString(),\n                    action2: TString()\n                })\n            )\n            .code((argument) => [\n                // switch(argument.variant) {\n                //   case \"action1\":\n                //     <contract>.<storage> = argument.payload;\n                //     break;\n                //   case \"action2\":\n                //     <contract>.<storage> = argument.payload;\n                //     break;\n                // }\n                MatchVariant(argument)\n                    .Case('action1', (payload) => [\n                        SetValue(ContractStorage(), payload)\n                    ])\n                    .Case('action2', (payload) => [\n                        SetValue(ContractStorage(), payload)\n                    ])\n            ])\n    );\n")))}d.isMDXComponent=!0}}]);