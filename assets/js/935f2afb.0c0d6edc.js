"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"link","label":"Overview","href":"/smartts-sdk/","docId":"overview"},{"type":"category","collapsed":false,"collapsible":false,"label":"Contract Structure","items":[{"type":"link","label":"Entry Points","href":"/smartts-sdk/contract_api/entrypoint","docId":"contract_api/entrypoint"},{"type":"link","label":"Initial Storage","href":"/smartts-sdk/contract_api/initial_storage","docId":"contract_api/initial_storage"},{"type":"link","label":"On-Chain Views","href":"/smartts-sdk/contract_api/views","docId":"contract_api/views"}]},{"type":"link","label":"Values","href":"/smartts-sdk/literals","docId":"literals"},{"type":"link","label":"Types","href":"/smartts-sdk/types","docId":"types"},{"type":"category","collapsed":false,"collapsible":false,"label":"Expressions","items":[{"type":"link","label":"Arithmetic","href":"/smartts-sdk/expressions/arithmetic","docId":"expressions/arithmetic"},{"type":"link","label":"BLS12-381","href":"/smartts-sdk/expressions/bls12_381","docId":"expressions/bls12_381"},{"type":"link","label":"Comparison","href":"/smartts-sdk/expressions/comparison","docId":"expressions/comparison"},{"type":"link","label":"Contract","href":"/smartts-sdk/expressions/contract","docId":"expressions/contract"},{"type":"link","label":"Crypto","href":"/smartts-sdk/expressions/crypto","docId":"expressions/crypto"},{"type":"link","label":"Equality","href":"/smartts-sdk/expressions/equality","docId":"expressions/equality"},{"type":"link","label":"Integer","href":"/smartts-sdk/expressions/integer","docId":"expressions/integer"},{"type":"link","label":"Lambda","href":"/smartts-sdk/expressions/lambda","docId":"expressions/lambda"},{"type":"link","label":"Sapling","href":"/smartts-sdk/expressions/sapling","docId":"expressions/sapling"},{"type":"link","label":"Serialization","href":"/smartts-sdk/expressions/serialization","docId":"expressions/serialization"},{"type":"link","label":"Accessing Variables","href":"/smartts-sdk/expressions/variables","docId":"expressions/variables"},{"type":"link","label":"On-Chain View","href":"/smartts-sdk/expressions/view","docId":"expressions/view"}]},{"type":"category","collapsed":false,"collapsible":false,"label":"Statements","items":[{"type":"link","label":"Assertion","href":"/smartts-sdk/statements/assertion","docId":"statements/assertion"},{"type":"link","label":"Conditional Controls","href":"/smartts-sdk/statements/conditionals","docId":"statements/conditionals"},{"type":"link","label":"Loop Controls","href":"/smartts-sdk/statements/loops","docId":"statements/loops"},{"type":"link","label":"Return values (Views/Lambdas)","href":"/smartts-sdk/statements/return","docId":"statements/return"},{"type":"link","label":"Declaring variables","href":"/smartts-sdk/statements/variables","docId":"statements/variables"}]},{"type":"category","collapsed":false,"collapsible":false,"label":"Contracts","items":[{"type":"link","label":"FA2","href":"/smartts-sdk/contracts/fa2","docId":"contracts/fa2"}]}]},"docs":{"compilation/lambda":{"id":"compilation/lambda","title":"Build and compile a lambda","description":""},"contract_api/entrypoint":{"id":"contract_api/entrypoint","title":"Entry Points","description":"Define an entrypoint","sidebar":"sidebar"},"contract_api/initial_storage":{"id":"contract_api/initial_storage","title":"Initial Storage","description":"Define the initial storage","sidebar":"sidebar"},"contract_api/views":{"id":"contract_api/views","title":"On-Chain Views","description":"Define an on-chain view","sidebar":"sidebar"},"contracts/fa2":{"id":"contracts/fa2","title":"FA2","description":"The contract described in this document is an implementation of TZIP-12 also known as FA2.","sidebar":"sidebar"},"expressions/arithmetic":{"id":"expressions/arithmetic","title":"Arithmetic","description":"Addition","sidebar":"sidebar"},"expressions/bls12_381":{"id":"expressions/bls12_381","title":"BLS12-381","description":"Check a BLS12-381 pairing","sidebar":"sidebar"},"expressions/comparison":{"id":"expressions/comparison","title":"Comparison","description":"LessThan","sidebar":"sidebar"},"expressions/contract":{"id":"expressions/contract","title":"Contract","description":"Cast an address to a contract entrypoint","sidebar":"sidebar"},"expressions/crypto":{"id":"expressions/crypto","title":"Crypto","description":"Signatures","sidebar":"sidebar"},"expressions/equality":{"id":"expressions/equality","title":"Equality","description":"Equal","sidebar":"sidebar"},"expressions/integer":{"id":"expressions/integer","title":"Integer","description":"Type convertion","sidebar":"sidebar"},"expressions/lambda":{"id":"expressions/lambda","title":"Lambda","description":"Create a lambda","sidebar":"sidebar"},"expressions/sapling":{"id":"expressions/sapling","title":"Sapling","description":"Create a sapling empty state","sidebar":"sidebar"},"expressions/serialization":{"id":"expressions/serialization","title":"Serialization","description":"Serialize data","sidebar":"sidebar"},"expressions/variables":{"id":"expressions/variables","title":"Accessing Variables","description":"Access a local variable","sidebar":"sidebar"},"expressions/view":{"id":"expressions/view","title":"On-Chain View","description":"Call an on-chain view","sidebar":"sidebar"},"literals":{"id":"literals","title":"Literal Expressions","description":"Singleton Literals","sidebar":"sidebar"},"overview":{"id":"overview","title":"Overview","description":"CI","sidebar":"sidebar"},"statements/assertion":{"id":"statements/assertion","title":"Assertion","description":"Require","sidebar":"sidebar"},"statements/conditionals":{"id":"statements/conditionals","title":"Conditional Controls","description":"If","sidebar":"sidebar"},"statements/loops":{"id":"statements/loops","title":"Loop Controls","description":"For","sidebar":"sidebar"},"statements/return":{"id":"statements/return","title":"Return values (Views/Lambdas)","description":"Return","sidebar":"sidebar"},"statements/variables":{"id":"statements/variables","title":"Declaring variables","description":"NewVariable","sidebar":"sidebar"},"types":{"id":"types","title":"Types","description":"Singleton Types","sidebar":"sidebar"}}}')}}]);