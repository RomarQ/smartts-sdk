"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[175],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1676:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={},u="Return values (Views/Lambdas)",l={unversionedId:"statements/return",id:"statements/return",title:"Return values (Views/Lambdas)",description:"Return",source:"@site/docs/statements/return.md",sourceDirName:"statements",slug:"/statements/return",permalink:"/smartts-sdk/statements/return",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/statements/return.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Loop Controls",permalink:"/smartts-sdk/statements/loops"},next:{title:"Declaring variables",permalink:"/smartts-sdk/statements/variables"}},c=[{value:"Return",id:"return",children:[{value:"Usage",id:"usage",children:[],level:4}],level:2}],p={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"return-values-viewslambdas"},"Return values (Views/Lambdas)"),(0,o.kt)("h2",{id:"return"},"Return"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Return")," statement can be used to return values inside ",(0,o.kt)("inlineCode",{parentName:"p"},"lambdas")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"views"),". (",(0,o.kt)("inlineCode",{parentName:"p"},"Entry points")," do not return values.)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/statement.html#Return"},"TypeDoc"))),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n    Contract,\n    EntryPoint,\n    OnChainView,\n    If,\n    Return,\n    SetValue,\n    GreaterThan,\n    Not,\n    Lambda,\n    ContractStorage,\n    GetSelfAddress,\n    CallLambda,\n    CallView,\n    Nat,\n    String,\n    Bool,\n    TNat,\n    TString\n} from '@tezwell/smartts-sdk';\n\nconst lambda = Lambda()\n    .setInputType(TNat())\n    .code((arg) => [\n        If(GreaterThan(arg, Nat(2)))\n            .Then([Return(String('YES'))])  // Return \"YES\" if true\n            .Else([Return(String('NO'))]),  // Return \"NO\" if false\n    ]);\n\nconst contract = new Contract()\n    .setStorageType(TOption(TString()))\n    .addView(\n        new OnChainView('some_view')\n            .setInputType(TNat())\n            .code((argument) => [\n                Return(CallLambda(lambda, argument))\n            ])\n    )\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .code((arg) => [\n                SetValue(ContractStorage(), CallView('some_view', GetSelfAddress(), arg, TString())),\n            ]),\n    );\n")))}m.isMDXComponent=!0}}]);