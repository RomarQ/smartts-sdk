"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[112],{3905:function(t,n,e){e.d(n,{Zo:function(){return p},kt:function(){return m}});var r=e(7294);function a(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function o(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function s(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?o(Object(e),!0).forEach((function(n){a(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function c(t,n){if(null==t)return{};var e,r,a=function(t,n){if(null==t)return{};var e,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var i=r.createContext({}),l=function(t){var n=r.useContext(i),e=n;return t&&(e="function"==typeof t?t(n):s(s({},n),t)),e},p=function(t){var n=l(t.components);return r.createElement(i.Provider,{value:n},t.children)},d={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(t,n){var e=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),u=l(e),m=a,y=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return e?r.createElement(y,s(s({ref:n},p),{},{components:e})):r.createElement(y,s({ref:n},p))}));function m(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var o=e.length,s=new Array(o);s[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=t,c.mdxType="string"==typeof t?t:a,s[1]=c;for(var l=2;l<o;l++)s[l]=e[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,e)}u.displayName="MDXCreateElement"},789:function(t,n,e){e.r(n),e.d(n,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var r=e(7462),a=e(3366),o=(e(7294),e(3905)),s=["components"],c={},i="Contract",l={unversionedId:"expressions/contract",id:"expressions/contract",title:"Contract",description:"Cast an address to a contract entrypoint",source:"@site/docs/expressions/contract.md",sourceDirName:"expressions",slug:"/expressions/contract",permalink:"/smartts-sdk/expressions/contract",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/expressions/contract.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Comparison",permalink:"/smartts-sdk/expressions/comparison"},next:{title:"Crypto",permalink:"/smartts-sdk/expressions/crypto"}},p=[{value:"Cast an address to a contract entrypoint",id:"cast-an-address-to-a-contract-entrypoint",children:[{value:"ToContract",id:"tocontract",children:[],level:3},{value:"GetContract",id:"getcontract",children:[],level:3}],level:2},{value:"Extract contract address",id:"extract-contract-address",children:[{value:"ToAddress",id:"toaddress",children:[],level:3},{value:"ImplicitAccount",id:"implicitaccount",children:[],level:3}],level:2}],d={toc:p};function u(t){var n=t.components,e=(0,a.Z)(t,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,e,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contract"},"Contract"),(0,o.kt)("h2",{id:"cast-an-address-to-a-contract-entrypoint"},"Cast an address to a contract entrypoint"),(0,o.kt)("h3",{id:"tocontract"},"ToContract"),(0,o.kt)("p",null,"Returns a value of type ",(0,o.kt)("inlineCode",{parentName:"p"},"TContract(<entrypoint_argument_type>)"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#ToContract"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    Transfer,\n    ToContract,\n    Unit,\n    Mutez,\n    Address,\n    TUnit,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .code((arg) => [\n                Transfer(\n                    ToContract(Address('KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT'), 'entry_point_1', TUnit()),\n                    Mutez(100),\n                    Unit(),\n                ).send(),\n            ]),\n    );\n")),(0,o.kt)("h3",{id:"getcontract"},"GetContract"),(0,o.kt)("p",null,"Returns a value of type ",(0,o.kt)("inlineCode",{parentName:"p"},"TOption(TContract(<entrypoint_argument_type>))"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#GetContract"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    Transfer,\n    GetSome,\n    GetContract,\n    Unit,\n    Mutez,\n    String,\n    Address,\n    TUnit,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .code((arg) => [\n                Transfer(\n                    GetSome(\n                        GetContract(Address('KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT'), 'entry_point_1', TUnit()), String(\"CONTRACT_INVALID\")\n                    ),\n                    Mutez(100),\n                    Unit(),\n                ).send(),\n            ]),\n    );\n")),(0,o.kt)("h2",{id:"extract-contract-address"},"Extract contract address"),(0,o.kt)("h3",{id:"toaddress"},"ToAddress"),(0,o.kt)("p",null,"Returns a value of type ",(0,o.kt)("inlineCode",{parentName:"p"},"TAddress()"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#ToAddress"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    Transfer,\n    SetValue,\n    ToAddress,\n    GetSelf,\n    ContractStorage,\n    String,\n    TAddress,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TAddress())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .code((arg) => [\n            .addEntrypoint(\n                SetValue(ContractStorage(), ToAddress(GetSelf('entry_point_1'))),\n            ]),\n    );\n")),(0,o.kt)("h3",{id:"implicitaccount"},"ImplicitAccount"),(0,o.kt)("p",null,"Create an implicit account of type ",(0,o.kt)("inlineCode",{parentName:"p"},"TContract(TUnit())"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#ImplicitAccount"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    Transfer,\n    ImplicitAccount,\n    Mutez,\n    TUnit,\n    TKey_hash\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TUnit())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1')\n            .setInputType(TKey_hash())\n            .code((argument) => [\n                Transfer(ImplicitAccount(argument), Mutez(0)).send()\n            ]),\n    );\n")))}u.isMDXComponent=!0}}]);