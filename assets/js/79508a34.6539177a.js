"use strict";(self.webpackChunksmartts_sdk_docs=self.webpackChunksmartts_sdk_docs||[]).push([[163],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6182:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={},c="Accessing Variables",l={unversionedId:"expressions/variables",id:"expressions/variables",title:"Accessing Variables",description:"Access a local variable",source:"@site/docs/expressions/variables.md",sourceDirName:"expressions",slug:"/expressions/variables",permalink:"/smartts-sdk/expressions/variables",editUrl:"https://github.com/RomarQ/smartts-sdk/tree/main/documentation/docs/expressions/variables.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Serialization",permalink:"/smartts-sdk/expressions/serialization"},next:{title:"On-Chain View",permalink:"/smartts-sdk/expressions/view"}},p=[{value:"Access a local variable",id:"access-a-local-variable",children:[],level:2},{value:"Access the contract storage",id:"access-the-contract-storage",children:[],level:2},{value:"Access the list of operations",id:"access-the-list-of-operations",children:[],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"accessing-variables"},"Accessing Variables"),(0,o.kt)("h2",{id:"access-a-local-variable"},"Access a local variable"),(0,o.kt)("p",null,"The expression ",(0,o.kt)("inlineCode",{parentName:"p"},"GetVariable")," is used to get the value stored in a local variable."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#GetVariable"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    NewVariable,\n    ContractStorage,\n    GetVariable,\n    TString,\n} = require(\'@tezwell/smartts-sdk\');\n\nconst contract = new Contract()\n    .setStorageType(TString())\n    .addEntrypoint(\n        new EntryPoint(\'entry_point_1\')\n            .setInputType(TString())\n            .code((argument) => [\n                // let some_variable = "SOME_PREFIX_" + <argument>;\n                NewVariable("some_variable", Concat(["SOME_PREFIX_", argument])),\n                // <contract>.<storage> = some_variable\n                SetValue(ContractStorage(), GetVariable("some_variable"))\n            ]),\n    );\n')),(0,o.kt)("h2",{id:"access-the-contract-storage"},"Access the contract storage"),(0,o.kt)("p",null,"The expression ",(0,o.kt)("inlineCode",{parentName:"p"},"ContractStorage")," is used to access the contract storage."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#ContractStorage"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    Require,\n    ContractStorage,\n    String,\n    TBool,\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .setStorageType(TBool())\n    .addEntrypoint(\n        new EntryPoint('entry_point_1').code(() => [\n            // The storage is a boolean that will be \"true\" only when the contract is active and false otherwise\n            Require(ContractStorage(), String(\"The contract is paused!\")),\n        ]),\n    );\n")),(0,o.kt)("h2",{id:"access-the-list-of-operations"},"Access the list of operations"),(0,o.kt)("p",null,"The expression ",(0,o.kt)("inlineCode",{parentName:"p"},"GetOperations")," is used to get the operations list from the stack or an empty list otherwise."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://romarq.github.io/smartts-sdk/api/modules/expression.html#GetOperations"},"TypeDoc"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n    Contract,\n    EntryPoint,\n    SetValue,\n    GetOperations,\n    SetDelegate,\n    PrependToList,\n    None\n} = require('@tezwell/smartts-sdk');\n\nconst contract = new Contract()\n    .addEntrypoint(\n        new EntryPoint('entry_point_1').code(() => [\n            // Add a new operation to the stack\n            SetValue(\n                GetOperations(),\n                PrependToList(\n                    GetOperations(),\n                    SetDelegate(None()),\n                ),\n            ),\n        ]),\n    );\n")))}m.isMDXComponent=!0}}]);