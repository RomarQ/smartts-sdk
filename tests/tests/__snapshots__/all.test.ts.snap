// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Types addres 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"address\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types addres 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "address",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types big_map 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (bigmap \\"nat\\" \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types big_map 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
          Object {
            "prim": "nat",
          },
        ],
        "prim": "big_map",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types bls12_381_fr 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"bls12_381_fr\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types bls12_381_fr 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "bls12_381_fr",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types bls12_381_g1 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"bls12_381_g1\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types bls12_381_g1 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "bls12_381_g1",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types bls12_381_g2 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"bls12_381_g2\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types bls12_381_g2 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "bls12_381_g2",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types bool 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"bool\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types bool 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "bool",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types bytes 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"bytes\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types bytes 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "bytes",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types chain_id 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"chain_id\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types chain_id 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "chain_id",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types contract 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (contract \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types contract 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
        ],
        "prim": "contract",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types int 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"int\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types int 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "int",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types key 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"key\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types key 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "key",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types key_hash 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"key_hash\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types key_hash 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "key_hash",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types lambda 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (lambda \\"nat\\" \\"unit\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types lambda 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
          Object {
            "prim": "unit",
          },
        ],
        "prim": "lambda",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types list 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (list \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types list 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
        ],
        "prim": "list",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types map 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (map \\"nat\\" \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types map 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
          Object {
            "prim": "nat",
          },
        ],
        "prim": "map",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types mutez 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"mutez\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types mutez 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "mutez",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types nat 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"nat\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types nat 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "nat",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types never 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"never\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types never 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "never",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types operation 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"operation\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types operation 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "operation",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types option 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (option \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types option 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
        ],
        "prim": "option",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types option 3`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (tuple \\"nat\\" \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types option 4`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
          Object {
            "prim": "nat",
          },
        ],
        "prim": "pair",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types record (left comb) 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (record ((field1 \\"nat\\") (field2 \\"unit\\") (field3 \\"string\\")) (Some (((\\"field1\\") (\\"field2\\")) (\\"field3\\")))) (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types record (left comb) 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "args": Array [
              Object {
                "annots": Array [
                  "%field1",
                ],
                "prim": "nat",
              },
              Object {
                "annots": Array [
                  "%field2",
                ],
                "prim": "unit",
              },
            ],
            "prim": "pair",
          },
          Object {
            "annots": Array [
              "%field3",
            ],
            "prim": "string",
          },
        ],
        "prim": "pair",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types record (right comb) 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (record ((field1 \\"nat\\") (field2 \\"unit\\") (field3 \\"string\\")) (Some ((\\"field1\\") ((\\"field2\\") (\\"field3\\"))))) (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types record (right comb) 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "annots": Array [
              "%field1",
            ],
            "prim": "nat",
          },
          Object {
            "args": Array [
              Object {
                "annots": Array [
                  "%field2",
                ],
                "prim": "unit",
              },
              Object {
                "annots": Array [
                  "%field3",
                ],
                "prim": "string",
              },
            ],
            "prim": "pair",
          },
        ],
        "prim": "pair",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types set 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) (set \\"nat\\") (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types set 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "args": Array [
          Object {
            "prim": "nat",
          },
        ],
        "prim": "set",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types signature 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"signature\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types signature 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "signature",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types string 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"string\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types string 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "string",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types timestamp 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"timestamp\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types timestamp 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "timestamp",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Test Types unit 1`] = `
"
        (
            template_id (static_id 0 (\\"all.test.ts\\" 48))
            storage (unit)
            storage_type (\\"unit\\")
            messages ((ep1 True False False True (\\"all.test.ts\\" 51) ((set_type (params (\\"all.test.ts\\" 51)) \\"unit\\" (\\"all.test.ts\\" 51)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"all.test.ts\\" 48))
        )
        "
`;

exports[`Test Types unit 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "unit",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "unit",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "CDR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;
