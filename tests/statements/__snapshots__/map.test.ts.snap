// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Map statements DeleteMapEntry on BigMap 1`] = `
"
        (
            template_id (static_id 0 (\\"map.test.ts\\" 18))
            storage (big_map (\\"map.test.ts\\" 19) ((literal (string \\"some_key\\") (\\"map.test.ts\\" 19)) (literal (nat 1) (\\"map.test.ts\\" 19))))
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"map.test.ts\\" 21) ((set_type (params (\\"map.test.ts\\" 21)) \\"string\\" (\\"map.test.ts\\" 24)) (delItem (data) (params (\\"map.test.ts\\" 21)) (\\"map.test.ts\\" 21)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"map.test.ts\\" 18))
        )
        "
`;

exports[`Test Map statements DeleteMapEntry on BigMap 2`] = `
"{
    \\"micheline\\": \\"parameter (string %ep1);\\\\nstorage   (big_map string nat);\\\\ncode\\\\n  {\\\\n    UNPAIR;     # @parameter : @storage\\\\n    SWAP;       # @storage : @parameter\\\\n    # == ep1 ==\\\\n    # del self.data[params] # @storage : @parameter\\\\n    NONE nat;   # option nat : @storage : @parameter\\\\n    DIG 2;      # @parameter : option nat : @storage\\\\n    UPDATE;     # big_map string nat\\\\n    NIL operation; # list operation : big_map string nat\\\\n    PAIR;       # pair (list operation) (big_map string nat)\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"big_map\\",
                    \\"args\\": [
                        {
                            \\"prim\\": \\"string\\"
                        },
                        {
                            \\"prim\\": \\"nat\\"
                        }
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"string\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"NONE\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"nat\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"UPDATE\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ]
}"
`;

exports[`Test Map statements DeleteMapEntry on Map 1`] = `
"
        (
            template_id (static_id 0 (\\"map.test.ts\\" 9))
            storage (map (\\"map.test.ts\\" 10) ((literal (string \\"some_key\\") (\\"map.test.ts\\" 10)) (literal (nat 1) (\\"map.test.ts\\" 10))))
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"map.test.ts\\" 12) ((set_type (params (\\"map.test.ts\\" 12)) \\"string\\" (\\"map.test.ts\\" 15)) (delItem (data) (params (\\"map.test.ts\\" 12)) (\\"map.test.ts\\" 12)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"map.test.ts\\" 9))
        )
        "
`;

exports[`Test Map statements DeleteMapEntry on Map 2`] = `
"{
    \\"micheline\\": \\"parameter (string %ep1);\\\\nstorage   (map string nat);\\\\ncode\\\\n  {\\\\n    UNPAIR;     # @parameter : @storage\\\\n    SWAP;       # @storage : @parameter\\\\n    # == ep1 ==\\\\n    # del self.data[params] # @storage : @parameter\\\\n    NONE nat;   # option nat : @storage : @parameter\\\\n    DIG 2;      # @parameter : option nat : @storage\\\\n    UPDATE;     # map string nat\\\\n    NIL operation; # list operation : map string nat\\\\n    PAIR;       # pair (list operation) (map string nat)\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"map\\",
                    \\"args\\": [
                        {
                            \\"prim\\": \\"string\\"
                        },
                        {
                            \\"prim\\": \\"nat\\"
                        }
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"string\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"NONE\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"nat\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"UPDATE\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ]
}"
`;
