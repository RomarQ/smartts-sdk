// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test (While) statement Loop while condition is true 1`] = `
"
        (
            template_id (static_id 0 (\\"while.test.ts\\" 9))
            storage (literal (nat 1) (\\"while.test.ts\\" 10))
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"while.test.ts\\" 12) ((set_type (params (\\"while.test.ts\\" 12)) \\"nat\\" (\\"while.test.ts\\" 21)) (whileBlock (le (data) (params (\\"while.test.ts\\" 12)) (\\"comparison.ts\\" 58)) ((set (data) (add (data) (literal (nat 1) (\\"while.test.ts\\" 14)) (\\"math.ts\\" 30)) (\\"while.test.ts\\" 14))) (\\"while.test.ts\\" 14)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"while.test.ts\\" 9))
        )
        "
`;

exports[`Test (While) statement Loop while condition is true 2`] = `
"{
    \\"micheline\\": \\"parameter (nat %ep1);\\\\nstorage   nat;\\\\ncode\\\\n  {\\\\n    UNPAIR;\\\\n    DUP;\\\\n    DUP 3;\\\\n    COMPARE;\\\\n    LE;\\\\n    LOOP\\\\n      {\\\\n        PUSH nat 1;\\\\n        DIG 2;\\\\n        ADD;\\\\n        SWAP;\\\\n        DUP;\\\\n        DUP 3;\\\\n        COMPARE;\\\\n        LE;\\\\n      };\\\\n    DROP;\\\\n    NIL operation;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"nat\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"nat\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"3\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"COMPARE\\"
                    },
                    {
                        \\"prim\\": \\"LE\\"
                    },
                    {
                        \\"prim\\": \\"LOOP\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"nat\\"
                                        },
                                        {
                                            \\"int\\": \\"1\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"DIG\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"2\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"ADD\\"
                                },
                                {
                                    \\"prim\\": \\"SWAP\\"
                                },
                                {
                                    \\"prim\\": \\"DUP\\"
                                },
                                {
                                    \\"prim\\": \\"DUP\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"3\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"COMPARE\\"
                                },
                                {
                                    \\"prim\\": \\"LE\\"
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TNat)\\\\n    self.init(1)\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TNat)\\\\n    sp.while self.data <= params:\\\\n      self.data += 1\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;
