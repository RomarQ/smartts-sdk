// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test (While) statement Loop while condition is true 1`] = `
"
        (
            template_id (static_id 0 (\\"while.test.ts\\" 9))
            storage (literal (nat 1) (\\"while.test.ts\\" 10))
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"while.test.ts\\" 12) ((set_type (params (\\"while.test.ts\\" 12)) \\"nat\\" (\\"while.test.ts\\" 21)) (whileBlock (le (data) (params (\\"while.test.ts\\" 12)) (\\"comparison.ts\\" 57)) ((set (data) (add (data) (literal (nat 1) (\\"while.test.ts\\" 14)) (\\"math.ts\\" 21)) (\\"while.test.ts\\" 14))) (\\"while.test.ts\\" 14)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"while.test.ts\\" 9))
        )
        "
`;

exports[`Test (While) statement Loop while condition is true 2`] = `
"{
    \\"micheline\\": \\"parameter (nat %ep1);\\\\nstorage   nat;\\\\ncode\\\\n  {\\\\n    UNPAIR;     # @parameter : @storage\\\\n    # == ep1 ==\\\\n    # while self.data <= params : ... # @parameter : @storage\\\\n    DUP;        # @parameter : @parameter : @storage\\\\n    DUP 3;      # @storage : @parameter : @parameter : @storage\\\\n    COMPARE;    # int : @parameter : @storage\\\\n    LE;         # bool : @parameter : @storage\\\\n    LOOP\\\\n      {\\\\n        # self.data += 1 # @parameter : @storage\\\\n        PUSH nat 1; # nat : @parameter : @storage\\\\n        DIG 2;      # @storage : nat : @parameter\\\\n        ADD;        # nat : @parameter\\\\n        SWAP;       # @parameter : nat\\\\n        # check for next loop: self.data <= params # @parameter : nat\\\\n        DUP;        # @parameter : @parameter : nat\\\\n        DUP 3;      # nat : @parameter : @parameter : nat\\\\n        COMPARE;    # int : @parameter : nat\\\\n        LE;         # bool : @parameter : nat\\\\n      }; # @parameter : @storage\\\\n    DROP;       # @storage\\\\n    NIL operation; # list operation : @storage\\\\n    PAIR;       # pair (list operation) @storage\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"nat\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"nat\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"3\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"COMPARE\\"
                    },
                    {
                        \\"prim\\": \\"LE\\"
                    },
                    {
                        \\"prim\\": \\"LOOP\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"nat\\"
                                        },
                                        {
                                            \\"int\\": \\"1\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"DIG\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"2\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"ADD\\"
                                },
                                {
                                    \\"prim\\": \\"SWAP\\"
                                },
                                {
                                    \\"prim\\": \\"DUP\\"
                                },
                                {
                                    \\"prim\\": \\"DUP\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"3\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"COMPARE\\"
                                },
                                {
                                    \\"prim\\": \\"LE\\"
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ]
}"
`;
