// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Variant statements MatchVariant 1 1`] = `
"
        (
            template_id (static_id 0 (\\"variant.test.ts\\" 9))
            storage (literal (string \\"\\") (\\"variant.test.ts\\" 10))
            storage_type (())
            messages ((ep1 True False False True (\\"variant.test.ts\\" 12) ((set_type (params (\\"variant.test.ts\\" 12)) (variant ((action1 \\"string\\") (action2 \\"string\\")) (Some ((\\"action1\\") (\\"action2\\"))) (\\"\\" -1)) (\\"variant.test.ts\\" 18)) (match_cases (params (\\"variant.test.ts\\" 12)) \\"__MATCH_1__\\" ((match (cases_arg \\"__MATCH_1__\\" (\\"variant.test.ts\\" 12)) action1 \\"__MATCH_1___action1\\" ((set (data) (variant_arg \\"__MATCH_1___action1\\" (\\"variant.test.ts\\" 12)) (\\"variant.test.ts\\" 12))) (\\"variant.test.ts\\" 12)) (match (cases_arg \\"__MATCH_1__\\" (\\"variant.test.ts\\" 12)) action2 \\"__MATCH_1___action2\\" ((set (data) (variant_arg \\"__MATCH_1___action2\\" (\\"variant.test.ts\\" 12)) (\\"variant.test.ts\\" 12))) (\\"variant.test.ts\\" 12))) (\\"variant.test.ts\\" 12)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"variant.test.ts\\" 9))
        )
        "
`;

exports[`Test Variant statements MatchVariant 1 2`] = `
"[
    {
        \\"prim\\": \\"storage\\",
        \\"args\\": [
            {
                \\"prim\\": \\"string\\"
            }
        ]
    },
    {
        \\"prim\\": \\"parameter\\",
        \\"args\\": [
            {
                \\"prim\\": \\"or\\",
                \\"args\\": [
                    {
                        \\"prim\\": \\"string\\",
                        \\"annots\\": [
                            \\"%action1\\"
                        ]
                    },
                    {
                        \\"prim\\": \\"string\\",
                        \\"annots\\": [
                            \\"%action2\\"
                        ]
                    }
                ],
                \\"annots\\": [
                    \\"%ep1\\"
                ]
            }
        ]
    },
    {
        \\"prim\\": \\"code\\",
        \\"args\\": [
            [
                {
                    \\"prim\\": \\"CAR\\"
                },
                {
                    \\"prim\\": \\"IF_LEFT\\",
                    \\"args\\": [
                        [],
                        []
                    ]
                },
                {
                    \\"prim\\": \\"NIL\\",
                    \\"args\\": [
                        {
                            \\"prim\\": \\"operation\\"
                        }
                    ]
                },
                {
                    \\"prim\\": \\"PAIR\\"
                }
            ]
        ]
    }
]"
`;

exports[`Test Variant statements MatchVariant 2 1`] = `
"
        (
            template_id (static_id 0 (\\"variant.test.ts\\" 24))
            storage (literal (string \\"\\") (\\"variant.test.ts\\" 25))
            storage_type (())
            messages ((ep1 True False False True (\\"variant.test.ts\\" 27) ((set_type (params (\\"variant.test.ts\\" 27)) (list (variant ((action1 \\"string\\") (action2 \\"string\\")) (Some ((\\"action1\\") (\\"action2\\"))) (\\"\\" -1))) (\\"variant.test.ts\\" 37)) (forGroup \\"__ITERATOR_FOREACH_2__\\" (params (\\"variant.test.ts\\" 27)) ((match_cases (iter \\"__ITERATOR_FOREACH_2__\\" (\\"variant.test.ts\\" 29)) \\"__MATCH_3__\\" ((match (cases_arg \\"__MATCH_3__\\" (\\"variant.test.ts\\" 29)) action1 \\"__MATCH_3___action1\\" ((set (data) (variant_arg \\"__MATCH_3___action1\\" (\\"variant.test.ts\\" 29)) (\\"variant.test.ts\\" 29))) (\\"variant.test.ts\\" 29)) (match (cases_arg \\"__MATCH_3__\\" (\\"variant.test.ts\\" 29)) action2 \\"__MATCH_3___action2\\" ((set (data) (variant_arg \\"__MATCH_3___action2\\" (\\"variant.test.ts\\" 29)) (\\"variant.test.ts\\" 29))) (\\"variant.test.ts\\" 29))) (\\"variant.test.ts\\" 29))) (\\"variant.test.ts\\" 29)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"variant.test.ts\\" 24))
        )
        "
`;

exports[`Test Variant statements MatchVariant 2 2`] = `
"[
    {
        \\"prim\\": \\"storage\\",
        \\"args\\": [
            {
                \\"prim\\": \\"string\\"
            }
        ]
    },
    {
        \\"prim\\": \\"parameter\\",
        \\"args\\": [
            {
                \\"prim\\": \\"list\\",
                \\"args\\": [
                    {
                        \\"prim\\": \\"or\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"string\\",
                                \\"annots\\": [
                                    \\"%action1\\"
                                ]
                            },
                            {
                                \\"prim\\": \\"string\\",
                                \\"annots\\": [
                                    \\"%action2\\"
                                ]
                            }
                        ]
                    }
                ],
                \\"annots\\": [
                    \\"%ep1\\"
                ]
            }
        ]
    },
    {
        \\"prim\\": \\"code\\",
        \\"args\\": [
            [
                {
                    \\"prim\\": \\"UNPAIR\\"
                },
                {
                    \\"prim\\": \\"DUP\\"
                },
                {
                    \\"prim\\": \\"ITER\\",
                    \\"args\\": [
                        [
                            {
                                \\"prim\\": \\"IF_LEFT\\",
                                \\"args\\": [
                                    [
                                        {
                                            \\"prim\\": \\"DIG\\",
                                            \\"args\\": [
                                                {
                                                    \\"int\\": \\"2\\"
                                                }
                                            ]
                                        },
                                        {
                                            \\"prim\\": \\"DROP\\"
                                        },
                                        {
                                            \\"prim\\": \\"SWAP\\"
                                        }
                                    ],
                                    [
                                        {
                                            \\"prim\\": \\"DIG\\",
                                            \\"args\\": [
                                                {
                                                    \\"int\\": \\"2\\"
                                                }
                                            ]
                                        },
                                        {
                                            \\"prim\\": \\"DROP\\"
                                        },
                                        {
                                            \\"prim\\": \\"SWAP\\"
                                        }
                                    ]
                                ]
                            }
                        ]
                    ]
                },
                {
                    \\"prim\\": \\"DROP\\"
                },
                {
                    \\"prim\\": \\"NIL\\",
                    \\"args\\": [
                        {
                            \\"prim\\": \\"operation\\"
                        }
                    ]
                },
                {
                    \\"prim\\": \\"PAIR\\"
                }
            ]
        ]
    }
]"
`;
