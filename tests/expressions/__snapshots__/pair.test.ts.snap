// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Expressions specific to Pair values FirstElement 1`] = `
"
        (
            template_id (static_id 0 (\\"pair.test.ts\\" 8))
            storage (tuple (\\"pair.test.ts\\" 9) (literal (nat 1) (\\"pair.test.ts\\" 9)) (literal (string \\"A String\\") (\\"pair.test.ts\\" 9)))
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"pair.test.ts\\" 10) ((set_type (params (\\"pair.test.ts\\" 10)) \\"unit\\" (\\"pair.test.ts\\" 12)) (verify (eq (first (data) (\\"pair.test.ts\\" 10)) (literal (nat 1) (\\"pair.test.ts\\" 10)) (\\"pair.test.ts\\" 10)) (unit) (\\"pair.test.ts\\" 10)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"pair.test.ts\\" 8))
        )
        "
`;

exports[`Expressions specific to Pair values FirstElement 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   (pair nat string);\\\\ncode\\\\n  {\\\\n    CDR;\\\\n    DUP;\\\\n    CAR;\\\\n    PUSH nat 1;\\\\n    COMPARE;\\\\n    EQ;\\\\n    IF\\\\n      {}\\\\n      {\\\\n        UNIT;\\\\n        FAILWITH;\\\\n      };\\\\n    NIL operation;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"pair\\",
                    \\"args\\": [
                        {
                            \\"prim\\": \\"nat\\"
                        },
                        {
                            \\"prim\\": \\"string\\"
                        }
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"CDR\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"CAR\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"nat\\"
                            },
                            {
                                \\"int\\": \\"1\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"COMPARE\\"
                    },
                    {
                        \\"prim\\": \\"EQ\\"
                    },
                    {
                        \\"prim\\": \\"IF\\",
                        \\"args\\": [
                            [],
                            [
                                {
                                    \\"prim\\": \\"UNIT\\"
                                },
                                {
                                    \\"prim\\": \\"FAILWITH\\"
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TPair(sp.TNat, sp.TString))\\\\n    self.init((1, 'A String'))\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.verify(sp.fst(self.data) == 1, sp.unit)\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Expressions specific to Pair values SecondElement 1`] = `
"
        (
            template_id (static_id 0 (\\"pair.test.ts\\" 15))
            storage (tuple (\\"pair.test.ts\\" 16) (literal (nat 1) (\\"pair.test.ts\\" 16)) (literal (string \\"A String\\") (\\"pair.test.ts\\" 16)))
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"pair.test.ts\\" 18) ((set_type (params (\\"pair.test.ts\\" 18)) \\"unit\\" (\\"pair.test.ts\\" 23)) (verify (eq (second (data) (\\"pair.test.ts\\" 18)) (literal (string \\"A String\\") (\\"pair.test.ts\\" 18)) (\\"pair.test.ts\\" 18)) (unit) (\\"pair.test.ts\\" 18)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"pair.test.ts\\" 15))
        )
        "
`;

exports[`Expressions specific to Pair values SecondElement 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   (pair nat string);\\\\ncode\\\\n  {\\\\n    CDR;\\\\n    DUP;\\\\n    CDR;\\\\n    PUSH string \\\\\\"A String\\\\\\";\\\\n    COMPARE;\\\\n    EQ;\\\\n    IF\\\\n      {}\\\\n      {\\\\n        UNIT;\\\\n        FAILWITH;\\\\n      };\\\\n    NIL operation;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"pair\\",
                    \\"args\\": [
                        {
                            \\"prim\\": \\"nat\\"
                        },
                        {
                            \\"prim\\": \\"string\\"
                        }
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"CDR\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"CDR\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"string\\"
                            },
                            {
                                \\"string\\": \\"A String\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"COMPARE\\"
                    },
                    {
                        \\"prim\\": \\"EQ\\"
                    },
                    {
                        \\"prim\\": \\"IF\\",
                        \\"args\\": [
                            [],
                            [
                                {
                                    \\"prim\\": \\"UNIT\\"
                                },
                                {
                                    \\"prim\\": \\"FAILWITH\\"
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TPair(sp.TNat, sp.TString))\\\\n    self.init((1, 'A String'))\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.verify(sp.snd(self.data) == 'A String', sp.unit)\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;
