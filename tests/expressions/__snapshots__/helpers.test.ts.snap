// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Helpers EndsWith 1`] = `
"
        (
            template_id (static_id 0 (\\"helpers.test.ts\\" 21))
            storage ()
            storage_type (\\"bool\\")
            messages ((ep1 True False False True (\\"helpers.test.ts\\" 24) ((set_type (params (\\"helpers.test.ts\\" 24)) \\"unit\\" (\\"helpers.test.ts\\" 29)) (set (data) (call_michelson (op \\"
        DUP;
        SIZE;
        DUP 3;
        SIZE;
        SWAP;
        PAIR;
        DUP;
        UNPAIR;
        COMPARE;
        GE;
        IF
        {
            UNPAIR;
            DUP 2;
            SWAP;
            SUB;
            ABS; # ABS is secure here because we already validated that (text length is greater or equal to postfix)
            SLICE;
            IF_NONE
            {
                DROP;
                PUSH bool False;
            }
            {
                COMPARE;
                EQ;
            };
        }
        {
            DROP 3;
            PUSH bool False;
        };
        \\" \\"string\\" \\"string\\" out \\"bool\\") (\\"string.ts\\" 95) (literal (string \\"Hello\\") (\\"helpers.test.ts\\" 24)) (literal (string \\"lo\\") (\\"helpers.test.ts\\" 24))) (\\"helpers.test.ts\\" 24)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"helpers.test.ts\\" 21))
        )
        "
`;

exports[`Helpers EndsWith 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   bool;\\\\ncode\\\\n  {\\\\n    CAR;\\\\n    PUSH string \\\\\\"lo\\\\\\";\\\\n    PUSH string \\\\\\"Hello\\\\\\";\\\\n    DUP;\\\\n    SIZE;\\\\n    DUP 3;\\\\n    SIZE;\\\\n    SWAP;\\\\n    PAIR;\\\\n    DUP;\\\\n    UNPAIR;\\\\n    COMPARE;\\\\n    GE;\\\\n    IF\\\\n      {\\\\n        DIG 3;\\\\n        DROP;\\\\n        UNPAIR;\\\\n        DUP 2;\\\\n        SWAP;\\\\n        SUB;\\\\n        ABS;\\\\n        SLICE;\\\\n        IF_NONE\\\\n          {\\\\n            DROP;\\\\n            PUSH bool False;\\\\n          }\\\\n          {\\\\n            COMPARE;\\\\n            EQ;\\\\n          };\\\\n      }\\\\n      {\\\\n        DROP 4;\\\\n        PUSH bool False;\\\\n      };\\\\n    NIL operation;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"bool\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"CAR\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"string\\"
                            },
                            {
                                \\"string\\": \\"lo\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"string\\"
                            },
                            {
                                \\"string\\": \\"Hello\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"SIZE\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"3\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"SIZE\\"
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"COMPARE\\"
                    },
                    {
                        \\"prim\\": \\"GE\\"
                    },
                    {
                        \\"prim\\": \\"IF\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"DIG\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"3\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"DROP\\"
                                },
                                {
                                    \\"prim\\": \\"UNPAIR\\"
                                },
                                {
                                    \\"prim\\": \\"DUP\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"2\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"SWAP\\"
                                },
                                {
                                    \\"prim\\": \\"SUB\\"
                                },
                                {
                                    \\"prim\\": \\"ABS\\"
                                },
                                {
                                    \\"prim\\": \\"SLICE\\"
                                },
                                {
                                    \\"prim\\": \\"IF_NONE\\",
                                    \\"args\\": [
                                        [
                                            {
                                                \\"prim\\": \\"DROP\\"
                                            },
                                            {
                                                \\"prim\\": \\"PUSH\\",
                                                \\"args\\": [
                                                    {
                                                        \\"prim\\": \\"bool\\"
                                                    },
                                                    {
                                                        \\"prim\\": \\"False\\"
                                                    }
                                                ]
                                            }
                                        ],
                                        [
                                            {
                                                \\"prim\\": \\"COMPARE\\"
                                            },
                                            {
                                                \\"prim\\": \\"EQ\\"
                                            }
                                        ]
                                    ]
                                }
                            ],
                            [
                                {
                                    \\"prim\\": \\"DROP\\",
                                    \\"args\\": [
                                        {
                                            \\"int\\": \\"4\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"bool\\"
                                        },
                                        {
                                            \\"prim\\": \\"False\\"
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TBool)\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    self.data = sp.michelson(\\\\\\"\\\\\\\\n        DUP;\\\\\\\\n        SIZE;\\\\\\\\n        DUP 3;\\\\\\\\n        SIZE;\\\\\\\\n        SWAP;\\\\\\\\n        PAIR;\\\\\\\\n        DUP;\\\\\\\\n        UNPAIR;\\\\\\\\n        COMPARE;\\\\\\\\n        GE;\\\\\\\\n        IF\\\\\\\\n        {\\\\\\\\n            UNPAIR;\\\\\\\\n            DUP 2;\\\\\\\\n            SWAP;\\\\\\\\n            SUB;\\\\\\\\n            ABS; # ABS is secure here because we already validated that (text length is greater or equal to postfix)\\\\\\\\n            SLICE;\\\\\\\\n            IF_NONE\\\\\\\\n            {\\\\\\\\n                DROP;\\\\\\\\n                PUSH bool False;\\\\\\\\n            }\\\\\\\\n            {\\\\\\\\n                COMPARE;\\\\\\\\n                EQ;\\\\\\\\n            };\\\\\\\\n        }\\\\\\\\n        {\\\\\\\\n            DROP 3;\\\\\\\\n            PUSH bool False;\\\\\\\\n        };\\\\\\\\n        \\\\\\")('Hello', 'lo')\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Helpers IsKT1 1`] = `
"
        (
            template_id (static_id 0 (\\"helpers.test.ts\\" 32))
            storage ()
            storage_type (\\"bool\\")
            messages ((ep1 True False False True (\\"helpers.test.ts\\" 35) ((set_type (params (\\"helpers.test.ts\\" 35)) \\"unit\\" (\\"helpers.test.ts\\" 40)) (set (data) (and (ge (literal (address KT1XvNYseNDJJ6Kw27qhSEDF8ys8JhDopzfG) (\\"address.ts\\" 15)) (literal (address KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT) (\\"helpers.test.ts\\" 35)) (\\"address.ts\\" 15)) (le (literal (address KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT) (\\"address.ts\\" 16)) (literal (address KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT) (\\"helpers.test.ts\\" 35)) (\\"address.ts\\" 16)) (\\"address.ts\\" 14)) (\\"helpers.test.ts\\" 35)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"helpers.test.ts\\" 32))
        )
        "
`;

exports[`Helpers IsKT1 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   bool;\\\\ncode\\\\n  {\\\\n    DROP;\\\\n    PUSH address \\\\\\"KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT\\\\\\";\\\\n    PUSH address \\\\\\"KT1XvNYseNDJJ6Kw27qhSEDF8ys8JhDopzfG\\\\\\";\\\\n    COMPARE;\\\\n    GE;\\\\n    IF\\\\n      {\\\\n        PUSH address \\\\\\"KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT\\\\\\";\\\\n        PUSH address \\\\\\"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\\\\\\";\\\\n        COMPARE;\\\\n        LE;\\\\n      }\\\\n      {\\\\n        PUSH bool False;\\\\n      };\\\\n    NIL operation;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"bool\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"address\\"
                            },
                            {
                                \\"string\\": \\"KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"address\\"
                            },
                            {
                                \\"string\\": \\"KT1XvNYseNDJJ6Kw27qhSEDF8ys8JhDopzfG\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"COMPARE\\"
                    },
                    {
                        \\"prim\\": \\"GE\\"
                    },
                    {
                        \\"prim\\": \\"IF\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"address\\"
                                        },
                                        {
                                            \\"string\\": \\"KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"address\\"
                                        },
                                        {
                                            \\"string\\": \\"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"COMPARE\\"
                                },
                                {
                                    \\"prim\\": \\"LE\\"
                                }
                            ],
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"bool\\"
                                        },
                                        {
                                            \\"prim\\": \\"False\\"
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TBool)\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    self.data = (sp.address('KT1XvNYseNDJJ6Kw27qhSEDF8ys8JhDopzfG') >= sp.address('KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT')) & (sp.address('KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT') <= sp.address('KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT'))\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Helpers StartsWith 1`] = `
"
        (
            template_id (static_id 0 (\\"helpers.test.ts\\" 10))
            storage ()
            storage_type (\\"bool\\")
            messages ((ep1 True False False True (\\"helpers.test.ts\\" 13) ((set_type (params (\\"helpers.test.ts\\" 13)) \\"unit\\" (\\"helpers.test.ts\\" 18)) (set (data) (call_michelson (op \\"
        DUP;
        SIZE;
        DIG 2;
        SWAP;
        PUSH nat 0;
        SLICE;
        IF_NONE
            {
                DROP;
                PUSH bool False;
            }
            {
                COMPARE;
                EQ;
            };
        \\" \\"string\\" \\"string\\" out \\"bool\\") (\\"string.ts\\" 41) (literal (string \\"Hello\\") (\\"helpers.test.ts\\" 13)) (literal (string \\"He\\") (\\"helpers.test.ts\\" 13))) (\\"helpers.test.ts\\" 13)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"helpers.test.ts\\" 10))
        )
        "
`;

exports[`Helpers StartsWith 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   bool;\\\\ncode\\\\n  {\\\\n    DROP;\\\\n    PUSH string \\\\\\"He\\\\\\";\\\\n    PUSH string \\\\\\"Hello\\\\\\";\\\\n    DUP;\\\\n    SIZE;\\\\n    DIG 2;\\\\n    SWAP;\\\\n    PUSH nat 0;\\\\n    SLICE;\\\\n    IF_NONE\\\\n      {\\\\n        DROP;\\\\n        PUSH bool False;\\\\n      }\\\\n      {\\\\n        COMPARE;\\\\n        EQ;\\\\n      };\\\\n    NIL operation;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"bool\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"string\\"
                            },
                            {
                                \\"string\\": \\"He\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"string\\"
                            },
                            {
                                \\"string\\": \\"Hello\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"SIZE\\"
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"nat\\"
                            },
                            {
                                \\"int\\": \\"0\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"SLICE\\"
                    },
                    {
                        \\"prim\\": \\"IF_NONE\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"DROP\\"
                                },
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"bool\\"
                                        },
                                        {
                                            \\"prim\\": \\"False\\"
                                        }
                                    ]
                                }
                            ],
                            [
                                {
                                    \\"prim\\": \\"COMPARE\\"
                                },
                                {
                                    \\"prim\\": \\"EQ\\"
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TBool)\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    self.data = sp.michelson(\\\\\\"\\\\\\\\n        DUP;\\\\\\\\n        SIZE;\\\\\\\\n        DIG 2;\\\\\\\\n        SWAP;\\\\\\\\n        PUSH nat 0;\\\\\\\\n        SLICE;\\\\\\\\n        IF_NONE\\\\\\\\n            {\\\\\\\\n                DROP;\\\\\\\\n                PUSH bool False;\\\\\\\\n            }\\\\\\\\n            {\\\\\\\\n                COMPARE;\\\\\\\\n                EQ;\\\\\\\\n            };\\\\\\\\n        \\\\\\")('Hello', 'He')\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;
