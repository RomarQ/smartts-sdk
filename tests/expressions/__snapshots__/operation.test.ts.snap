// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Delegation operation Build operation (Desugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 70))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 73) ((set_type (params (\\"operation.test.ts\\" 73)) \\"unit\\" (\\"operation.test.ts\\" 84)) (set (operations (\\"operation.test.ts\\" 73)) (cons (set_delegate (variant \\"Some\\" (literal (key_hash tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN) (\\"operation.test.ts\\" 73)) (\\"operation.test.ts\\" 73)) (\\"operation.test.ts\\" 73)) (operations (\\"operation.test.ts\\" 73)) (\\"operation.test.ts\\" 73)) (\\"operation.test.ts\\" 73)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 70))
        )
        "
`;

exports[`Delegation operation Build operation (Desugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    CDR;\\\\n    NIL operation;\\\\n    PUSH (option key_hash) (Some \\\\\\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\\\\\");\\\\n    SET_DELEGATE;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"CDR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"option\\",
                                \\"args\\": [
                                    {
                                        \\"prim\\": \\"key_hash\\"
                                    }
                                ]
                            },
                            {
                                \\"prim\\": \\"Some\\",
                                \\"args\\": [
                                    {
                                        \\"string\\": \\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"SET_DELEGATE\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.set_delegate(sp.some(sp.key_hash('tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN')))\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Delegation operation Build operation to clear the delegation (Sugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 96))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 98) ((set_type (params (\\"operation.test.ts\\" 98)) \\"unit\\" (\\"operation.test.ts\\" 100)) (set (operations (\\"operation.test.ts\\" 98)) (cons (set_delegate (variant \\"None\\" (unit) (\\"operation.test.ts\\" 98)) (\\"operation.test.ts\\" 98)) (operations (\\"operation.test.ts\\" 98)) (\\"operation.test.ts\\" 98)) (\\"operation.test.ts\\" 98)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 96))
        )
        "
`;

exports[`Delegation operation Build operation to clear the delegation (Sugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    CDR;\\\\n    NIL operation;\\\\n    NONE key_hash;\\\\n    SET_DELEGATE;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"CDR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"NONE\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"key_hash\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"SET_DELEGATE\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.set_delegate(sp.none)\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Delegation operation Build operation to set delegator (Sugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 87))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 90) ((set_type (params (\\"operation.test.ts\\" 90)) \\"key_hash\\" (\\"operation.test.ts\\" 93)) (set (operations (\\"operation.test.ts\\" 90)) (cons (set_delegate (variant \\"Some\\" (params (\\"operation.test.ts\\" 90)) (\\"operation.test.ts\\" 90)) (\\"operation.test.ts\\" 90)) (operations (\\"operation.test.ts\\" 90)) (\\"operation.test.ts\\" 90)) (\\"operation.test.ts\\" 90)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 87))
        )
        "
`;

exports[`Delegation operation Build operation to set delegator (Sugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (key_hash %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    UNPAIR;\\\\n    SOME;\\\\n    SET_DELEGATE;\\\\n    NIL operation;\\\\n    SWAP;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"key_hash\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"SOME\\"
                    },
                    {
                        \\"prim\\": \\"SET_DELEGATE\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TKeyHash)\\\\n    sp.set_delegate(sp.some(params))\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Origination operation Build operation (Desugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 106))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 109) ((set_type (params (\\"operation.test.ts\\" 109)) \\"unit\\" (\\"operation.test.ts\\" 117)) (set (operations (\\"operation.test.ts\\" 109)) (cons (attr (create_contract (contract 
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 109))
            storage ()
            storage_type ((unknown 0))
            messages ()
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 109))
        )
        ) (storage (unit)) (baker (variant \\"None\\" (unit) (\\"operation.test.ts\\" 109))) (amount (literal (mutez 0) (\\"operation.test.ts\\" 109))) (\\"operation.test.ts\\" 109)) \\"operation\\" (\\"operation.test.ts\\" 109)) (operations (\\"operation.test.ts\\" 109)) (\\"operation.test.ts\\" 109)) (\\"operation.test.ts\\" 109)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 106))
        )
        "
`;

exports[`Origination operation Build operation (Desugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    UNPAIR;\\\\n    NIL operation;\\\\n    DUP;\\\\n    UNIT;\\\\n    PUSH mutez 0;\\\\n    NONE key_hash;\\\\n    CREATE_CONTRACT\\\\n     { parameter unit;\\\\n       storage   unit;\\\\n       code\\\\n         {\\\\n           CDR;\\\\n           NIL operation;\\\\n           PAIR;\\\\n         }};\\\\n    SWAP;\\\\n    DROP;\\\\n    DIG 2;\\\\n    DROP;\\\\n    DIG 2;\\\\n    DROP;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"UNIT\\"
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"mutez\\"
                            },
                            {
                                \\"int\\": \\"0\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"NONE\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"key_hash\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"CREATE_CONTRACT\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"parameter\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"unit\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"storage\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"unit\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"code\\",
                                    \\"args\\": [
                                        [
                                            {
                                                \\"prim\\": \\"CDR\\"
                                            },
                                            {
                                                \\"prim\\": \\"NIL\\",
                                                \\"args\\": [
                                                    {
                                                        \\"prim\\": \\"operation\\"
                                                    }
                                                ]
                                            },
                                            {
                                                \\"prim\\": \\"PAIR\\"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.operations().push(create contract ....operation)\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Origination operation Build operation (Sugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 120))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 123) ((set_type (params (\\"operation.test.ts\\" 123)) \\"unit\\" (\\"operation.test.ts\\" 133)) (set (operations (\\"operation.test.ts\\" 123)) (cons (attr (create_contract (contract 
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 123))
            storage ()
            storage_type ((unknown 0))
            messages ()
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 123))
        )
        ) (storage (params (\\"operation.test.ts\\" 123))) (baker (variant \\"Some\\" (literal (key_hash tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN) (\\"operation.test.ts\\" 123)) (\\"operation.test.ts\\" 123))) (amount (literal (mutez 100) (\\"operation.test.ts\\" 123))) (\\"operation.test.ts\\" 123)) \\"operation\\" (\\"operation.test.ts\\" 123)) (operations (\\"operation.test.ts\\" 123)) (\\"operation.test.ts\\" 123)) (\\"operation.test.ts\\" 123)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 120))
        )
        "
`;

exports[`Origination operation Build operation (Sugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    UNPAIR;\\\\n    NIL operation;\\\\n    DUP;\\\\n    DUP 3;\\\\n    PUSH mutez 100;\\\\n    PUSH (option key_hash) (Some \\\\\\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\\\\\");\\\\n    CREATE_CONTRACT\\\\n     { parameter unit;\\\\n       storage   unit;\\\\n       code\\\\n         {\\\\n           CDR;\\\\n           NIL operation;\\\\n           PAIR;\\\\n         }};\\\\n    SWAP;\\\\n    DROP;\\\\n    DIG 2;\\\\n    DROP;\\\\n    DIG 2;\\\\n    DROP;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DUP\\"
                    },
                    {
                        \\"prim\\": \\"DUP\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"3\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"mutez\\"
                            },
                            {
                                \\"int\\": \\"100\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"option\\",
                                \\"args\\": [
                                    {
                                        \\"prim\\": \\"key_hash\\"
                                    }
                                ]
                            },
                            {
                                \\"prim\\": \\"Some\\",
                                \\"args\\": [
                                    {
                                        \\"string\\": \\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"CREATE_CONTRACT\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"parameter\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"unit\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"storage\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"unit\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"code\\",
                                    \\"args\\": [
                                        [
                                            {
                                                \\"prim\\": \\"CDR\\"
                                            },
                                            {
                                                \\"prim\\": \\"NIL\\",
                                                \\"args\\": [
                                                    {
                                                        \\"prim\\": \\"operation\\"
                                                    }
                                                ]
                                            },
                                            {
                                                \\"prim\\": \\"PAIR\\"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        \\"prim\\": \\"SWAP\\"
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"2\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DROP\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.operations().push(create contract ....operation)\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Transaction operation Build operation (Desugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 22))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 25) ((set_type (params (\\"operation.test.ts\\" 25)) \\"unit\\" (\\"operation.test.ts\\" 36)) (set (operations (\\"operation.test.ts\\" 25)) (cons (transfer (params (\\"operation.test.ts\\" 25)) (literal (mutez 100) (\\"operation.test.ts\\" 25)) (openVariant (contract default \\"unit\\" (literal (address tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN) (\\"operation.test.ts\\" 25)) (\\"operation.test.ts\\" 25)) \\"Some\\" (literal (string \\"CONTRACT_NOT_FOUND\\") (\\"operation.test.ts\\" 25)) (\\"operation.test.ts\\" 25)) (\\"operation.test.ts\\" 25)) (operations (\\"operation.test.ts\\" 25)) (\\"operation.test.ts\\" 25)) (\\"operation.test.ts\\" 25)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 22))
        )
        "
`;

exports[`Transaction operation Build operation (Desugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    UNPAIR;\\\\n    NIL operation;\\\\n    PUSH address \\\\\\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\\\\\";\\\\n    CONTRACT %default unit;\\\\n    IF_NONE\\\\n      {\\\\n        PUSH string \\\\\\"CONTRACT_NOT_FOUND\\\\\\";\\\\n        FAILWITH;\\\\n      }\\\\n      {};\\\\n    PUSH mutez 100;\\\\n    DIG 3;\\\\n    TRANSFER_TOKENS;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"address\\"
                            },
                            {
                                \\"string\\": \\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"CONTRACT\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"unit\\"
                            }
                        ],
                        \\"annots\\": [
                            \\"%default\\"
                        ]
                    },
                    {
                        \\"prim\\": \\"IF_NONE\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"string\\"
                                        },
                                        {
                                            \\"string\\": \\"CONTRACT_NOT_FOUND\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"FAILWITH\\"
                                }
                            ],
                            []
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"mutez\\"
                            },
                            {
                                \\"int\\": \\"100\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"3\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"TRANSFER_TOKENS\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.transfer(params, sp.mutez(100), sp.contract(sp.TUnit, sp.address('tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN'), entry_point='default').open_some(message = 'CONTRACT_NOT_FOUND'))\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Transaction operation Build operation (Sugared version) 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 39))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 42) ((set_type (params (\\"operation.test.ts\\" 42)) \\"unit\\" (\\"operation.test.ts\\" 47)) (set (operations (\\"operation.test.ts\\" 42)) (cons (transfer (unit) (literal (mutez 100) (\\"operation.test.ts\\" 42)) (openVariant (contract default \\"unit\\" (literal (address tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN) (\\"operation.test.ts\\" 42)) (\\"operation.test.ts\\" 42)) \\"Some\\" (literal (string \\"CONTRACT_NOT_FOUND\\") (\\"operation.test.ts\\" 42)) (\\"operation.test.ts\\" 42)) (\\"operation.test.ts\\" 42)) (operations (\\"operation.test.ts\\" 42)) (\\"operation.test.ts\\" 42)) (\\"operation.test.ts\\" 42)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 39))
        )
        "
`;

exports[`Transaction operation Build operation (Sugared version) 2`] = `
"{
    \\"micheline\\": \\"parameter (unit %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    CDR;\\\\n    NIL operation;\\\\n    PUSH address \\\\\\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\\\\\";\\\\n    CONTRACT %default unit;\\\\n    IF_NONE\\\\n      {\\\\n        PUSH string \\\\\\"CONTRACT_NOT_FOUND\\\\\\";\\\\n        FAILWITH;\\\\n      }\\\\n      {};\\\\n    PUSH mutez 100;\\\\n    UNIT;\\\\n    TRANSFER_TOKENS;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"CDR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"address\\"
                            },
                            {
                                \\"string\\": \\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"CONTRACT\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"unit\\"
                            }
                        ],
                        \\"annots\\": [
                            \\"%default\\"
                        ]
                    },
                    {
                        \\"prim\\": \\"IF_NONE\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"string\\"
                                        },
                                        {
                                            \\"string\\": \\"CONTRACT_NOT_FOUND\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"FAILWITH\\"
                                }
                            ],
                            []
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"mutez\\"
                            },
                            {
                                \\"int\\": \\"100\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"UNIT\\"
                    },
                    {
                        \\"prim\\": \\"TRANSFER_TOKENS\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TUnit)\\\\n    sp.transfer(sp.unit, sp.mutez(100), sp.contract(sp.TUnit, sp.address('tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN'), entry_point='default').open_some(message = 'CONTRACT_NOT_FOUND'))\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;

exports[`Transaction operation Build operation to an originated contract 1`] = `
"
        (
            template_id (static_id 0 (\\"operation.test.ts\\" 50))
            storage (unit)
            storage_type ((unknown 0))
            messages ((ep1 True False False True (\\"operation.test.ts\\" 53) ((set_type (params (\\"operation.test.ts\\" 53)) \\"nat\\" (\\"operation.test.ts\\" 64)) (set (operations (\\"operation.test.ts\\" 55)) (cons (transfer (params (\\"operation.test.ts\\" 53)) (literal (mutez 100) (\\"operation.test.ts\\" 55)) (openVariant (contract ep1 \\"nat\\" (literal (address KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT) (\\"operation.test.ts\\" 55)) (\\"operation.test.ts\\" 55)) \\"Some\\" (literal (string \\"CONTRACT_NOT_FOUND\\") (\\"operation.test.ts\\" 55)) (\\"operation.test.ts\\" 55)) (\\"operation.test.ts\\" 55)) (operations (\\"operation.test.ts\\" 55)) (\\"operation.test.ts\\" 55)) (\\"operation.test.ts\\" 55)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"operation.test.ts\\" 50))
        )
        "
`;

exports[`Transaction operation Build operation to an originated contract 2`] = `
"{
    \\"micheline\\": \\"parameter (nat %ep1);\\\\nstorage   unit;\\\\ncode\\\\n  {\\\\n    UNPAIR;\\\\n    NIL operation;\\\\n    PUSH address \\\\\\"KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT\\\\\\";\\\\n    CONTRACT %ep1 nat;\\\\n    IF_NONE\\\\n      {\\\\n        PUSH string \\\\\\"CONTRACT_NOT_FOUND\\\\\\";\\\\n        FAILWITH;\\\\n      }\\\\n      {};\\\\n    PUSH mutez 100;\\\\n    DIG 3;\\\\n    TRANSFER_TOKENS;\\\\n    CONS;\\\\n    PAIR;\\\\n  };\\",
    \\"json\\": [
        {
            \\"prim\\": \\"storage\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"unit\\"
                }
            ]
        },
        {
            \\"prim\\": \\"parameter\\",
            \\"args\\": [
                {
                    \\"prim\\": \\"nat\\",
                    \\"annots\\": [
                        \\"%ep1\\"
                    ]
                }
            ]
        },
        {
            \\"prim\\": \\"code\\",
            \\"args\\": [
                [
                    {
                        \\"prim\\": \\"UNPAIR\\"
                    },
                    {
                        \\"prim\\": \\"NIL\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"operation\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"address\\"
                            },
                            {
                                \\"string\\": \\"KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"CONTRACT\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"nat\\"
                            }
                        ],
                        \\"annots\\": [
                            \\"%ep1\\"
                        ]
                    },
                    {
                        \\"prim\\": \\"IF_NONE\\",
                        \\"args\\": [
                            [
                                {
                                    \\"prim\\": \\"PUSH\\",
                                    \\"args\\": [
                                        {
                                            \\"prim\\": \\"string\\"
                                        },
                                        {
                                            \\"string\\": \\"CONTRACT_NOT_FOUND\\"
                                        }
                                    ]
                                },
                                {
                                    \\"prim\\": \\"FAILWITH\\"
                                }
                            ],
                            []
                        ]
                    },
                    {
                        \\"prim\\": \\"PUSH\\",
                        \\"args\\": [
                            {
                                \\"prim\\": \\"mutez\\"
                            },
                            {
                                \\"int\\": \\"100\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"DIG\\",
                        \\"args\\": [
                            {
                                \\"int\\": \\"3\\"
                            }
                        ]
                    },
                    {
                        \\"prim\\": \\"TRANSFER_TOKENS\\"
                    },
                    {
                        \\"prim\\": \\"CONS\\"
                    },
                    {
                        \\"prim\\": \\"PAIR\\"
                    }
                ]
            ]
        }
    ],
    \\"smartpy\\": \\"import smartpy as sp\\\\n\\\\nclass Contract(sp.Contract):\\\\n  def __init__(self):\\\\n    self.init_type(sp.TUnit)\\\\n    self.init()\\\\n\\\\n  @sp.entry_point\\\\n  def ep1(self, params):\\\\n    sp.set_type(params, sp.TNat)\\\\n    sp.transfer(params, sp.mutez(100), sp.contract(sp.TNat, sp.address('KT1R9M3MDffw7qSVSnbJs46aMC9YzzZz3aGT'), entry_point='ep1').open_some(message = 'CONTRACT_NOT_FOUND'))\\\\n\\\\nsp.add_compilation_target(\\\\\\"visualtez_compilation\\\\\\", Contract())\\"
}"
`;
