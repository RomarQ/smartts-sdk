// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compile Contracts Simple 1 1`] = `
"
        (
            template_id (static_id 0 (\\"Compilation.test.ts\\" 10))
            storage (literal (nat 1) (\\"Compilation.test.ts\\" 11))
            storage_type (\\"nat\\")
            messages ((ep1 True False False True (\\"Compilation.test.ts\\" 13) ((defineLocal \\"A\\" (literal (nat 1) (\\"Compilation.test.ts\\" 13)) (\\"Compilation.test.ts\\" 13)) (verify (eq (getLocal \\"A\\" (\\"Compilation.test.ts\\" 13)) (params (\\"Compilation.test.ts\\" 13)) (\\"Compilation.test.ts\\" 13)) (literal (string \\"Error Message\\") (\\"Compilation.test.ts\\" 13)) (\\"Compilation.test.ts\\" 13)))))
            flags ()
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 0) (\\"Compilation.test.ts\\" 10))
        )
        "
`;

exports[`Compile Contracts Simple 1 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "prim": "nat",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "nat",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "UNPAIR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "nat",
            },
            Object {
              "int": "1",
            },
          ],
          "prim": "PUSH",
        },
        Object {
          "prim": "COMPARE",
        },
        Object {
          "prim": "EQ",
        },
        Object {
          "args": Array [
            Array [],
            Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "string",
                  },
                  Object {
                    "string": "Error Message",
                  },
                ],
                "prim": "PUSH",
              },
              Object {
                "prim": "FAILWITH",
              },
            ],
          ],
          "prim": "IF",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;

exports[`Compile Contracts Simple 2 1`] = `
"
        (
            template_id (static_id 0 (\\"Compilation.test.ts\\" 28))
            storage (list (\\"Compilation.test.ts\\" 29)  (literal (nat 1) (\\"Compilation.test.ts\\" 29)))
            storage_type ((list \\"nat\\"))
            messages ((ep1 True False False True (\\"Compilation.test.ts\\" 31) ((defineLocal \\"A\\" (literal (bool False) (\\"Compilation.test.ts\\" 33)) (\\"Compilation.test.ts\\" 33)) (verify (eq (getLocal \\"A\\" (\\"Compilation.test.ts\\" 33)) (params (\\"Compilation.test.ts\\" 33)) (\\"Compilation.test.ts\\" 33)) (literal (string \\"Error Message\\") (\\"Compilation.test.ts\\" 33)) (\\"Compilation.test.ts\\" 33)))))
            flags ((erase-comments))
            privates ()
            views ()
            entry_points_layout ()
            initial_metadata ()
            balance (literal (mutez 100) (\\"Compilation.test.ts\\" 40))
        )
        "
`;

exports[`Compile Contracts Simple 2 2`] = `
Array [
  Object {
    "args": Array [
      Object {
        "args": Array [
          Object {
            "prim": "nat",
          },
        ],
        "prim": "list",
      },
    ],
    "prim": "storage",
  },
  Object {
    "args": Array [
      Object {
        "annots": Array [
          "%ep1",
        ],
        "prim": "bool",
      },
    ],
    "prim": "parameter",
  },
  Object {
    "args": Array [
      Array [
        Object {
          "prim": "UNPAIR",
        },
        Object {
          "args": Array [
            Object {
              "prim": "bool",
            },
            Object {
              "prim": "False",
            },
          ],
          "prim": "PUSH",
        },
        Object {
          "prim": "COMPARE",
        },
        Object {
          "prim": "EQ",
        },
        Object {
          "args": Array [
            Array [],
            Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "string",
                  },
                  Object {
                    "string": "Error Message",
                  },
                ],
                "prim": "PUSH",
              },
              Object {
                "prim": "FAILWITH",
              },
            ],
          ],
          "prim": "IF",
        },
        Object {
          "args": Array [
            Object {
              "prim": "operation",
            },
          ],
          "prim": "NIL",
        },
        Object {
          "prim": "PAIR",
        },
      ],
    ],
    "prim": "code",
  },
]
`;
